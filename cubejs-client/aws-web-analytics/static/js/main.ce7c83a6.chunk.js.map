{"version":3,"sources":["PrismCode.js","App.js","track.js","serviceWorker.js","index.js"],"names":["PrismCode","Prism","highlightAll","react_default","a","createElement","className","this","props","code","React","Component","dateRange","moment","subtract","format","Header","Layout","Content","Footer","Sider","renderChart","resultSet","BizCharts","scale","category","tickCount","height","data","chartPivot","forceFit","name","label","formatter","val","seriesNames","map","s","key","crosshairs","type","position","concat","size","renderStackedBarChart","measure","pivot","_ref","xValues","yValuesArray","_ref2","_ref3","Object","slicedToArray","yValues","m","defineProperty","x","axisValuesString","color","Number","parseFloat","reduce","b","stackedBarChartData","API_KEY","App","cookie","uuidv4","fetch","method","body","JSON","stringify","url","window","location","href","referrer","document","anonymousId","eventType","headers","Content-Type","layout","style","padding","margin","row","justify","align","gutter","col","span","lg","card","title","marginBottom","cubejs_react","query","measures","timeDimensions","dimension","granularity","cubejsApi","cubejs","render","_ref5","spin","_ref6","dimensions","_ref7","_ref8","v","objectSpread","radius","showTitle","renderPieChart","textAlign","src","width","maxWidth","PrismCode_PrismCode","GithubCorner_default","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce7c83a6.chunk.js","sourcesContent":["import React from 'react';\nimport Prism from \"prismjs\";\nimport \"./prism.css\";\n\nexport default class PrismCode extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  componentDidUpdate() {\n    Prism.highlightAll();\n  }\n\n  render() {\n    return (\n      <pre>\n        <code className='language-javascript'>\n          { this.props.code }\n        </code>\n      </pre>\n    )\n  }\n}","import React, { Component } from 'react';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Row, Col, Card, Layout } from \"antd\";\nimport cubejs from '@cubejs-client/core';\nimport { QueryRenderer } from '@cubejs-client/react';\nimport { Spin } from 'antd';\nimport { Chart, Axis, Tooltip, Geom, Coord, Legend } from 'bizcharts';\nimport moment from 'moment';\nimport GithubCorner from 'react-github-corner';\nimport { trackPageView } from './track';\nimport PrismCode from './PrismCode';\n\nconst dateRange = [\n  moment().subtract(14,'d').format('YYYY-MM-DD'),\n  moment().format('YYYY-MM-DD'),\n];\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst renderChart = (resultSet) => (\n  <Chart scale={{ category: { tickCount: 8 } }} height={400} data={resultSet.chartPivot()} forceFit>\n    <Axis name=\"category\" label={{ formatter: val => moment(val).format(\"MMM DD\") }} />\n    {resultSet.seriesNames().map(s => (<Axis name={s.key} />))}\n    <Tooltip crosshairs={{type : 'y'}} />\n    {resultSet.seriesNames().map(s => (<Geom type=\"line\" position={`category*${s.key}`} size={2} />))}\n  </Chart>\n);\n\nconst stackedBarChartData = (resultSet) => {\n  const data = resultSet.pivot().map(\n    ({ xValues, yValuesArray }) =>\n      yValuesArray.map(([yValues, m]) => ({\n        x: resultSet.axisValuesString(xValues, ', '),\n        color: resultSet.axisValuesString([yValues[0]], ', '),\n        [yValues[1]]: m && Number.parseFloat(m)\n      }))\n  ).reduce((a, b) => a.concat(b));\n\n  return data;\n}\n\nconst renderStackedBarChart = (resultSet, measure) => (\n  <Chart height={400} data={stackedBarChartData(resultSet)} forceFit>\n  <Legend />\n    <Axis name=\"x\" label={{ formatter: val => moment(val).format(\"MMM DD\") }} />\n    <Axis name={measure} />\n    <Tooltip />\n    <Geom type='intervalStack' position={`x*${measure}`} color=\"color\" />\n  </Chart>\n);\n\nconst renderPieChart = (resultSet, measure) => (\n  <Chart height={400} data={resultSet.chartPivot().map(v => ({ ...v, category: v.x }))} forceFit>\n    <Coord type='theta' radius={0.75} />\n    <Axis name={measure} />\n    <Legend position='right' name=\"category\" title={null} />\n    <Tooltip showTitle={false}/>\n    <Geom\n      type=\"intervalStack\"\n      position={measure}\n      color='x'>\n    </Geom>\n  </Chart>\n);\n\nconst trackingCode = `import { fetch } from 'whatwg-fetch';\nimport cookie from 'component-cookie';\nimport uuidv4 from 'uuid/v4';\n\nconst trackPageView = () => {\n  if (!cookie('aws_web_uid')) {\n    cookie('aws_web_uid', uuidv4());\n  }\n  fetch(\n    'https://4bfydqnx8i.execute-api.us-east-1.amazonaws.com/dev/collect',\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        url: window.location.href,\n        referrer: document.referrer,\n        anonymousId: cookie('aws_web_uid'),\n        eventType: 'pageView'\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  )\n}`;\n\nconst lambdaCode = `const AWS = require('aws-sdk');\nconst { promisify } = require('util');\n\nconst kinesis = new AWS.Kinesis();\n\nconst putRecord = promisify(kinesis.putRecord.bind(kinesis));\n\nconst response = (body, status) => {\n  return {\n    statusCode: status || 200,\n    body: body && JSON.stringify(body),\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Credentials': true,\n      'Content-Type': 'application/json'\n    }\n  }\n}\n\nmodule.exports.collect = async (event, context) => {\n  const body = JSON.parse(event.body);\n  if (!body.anonymousId || !body.url || !body.eventType) {\n    return response({\n      error: 'anonymousId, url and eventType required'\n    }, 400);\n  }\n\n  await putRecord({\n    Data: JSON.stringify({\n      anonymous_id: body.anonymousId,\n      url: body.url,\n      event_type: body.eventType,\n      referrer: body.referrer,\n      timestamp: (new Date()).toISOString(),\n      source_ip: event.requestContext.identity.sourceIp,\n      user_agent: event.requestContext.identity.userAgent\n    }) + '\\\\n',\n    PartitionKey: body.anonymousId,\n    StreamName: 'event-collection'\n  });\n\n  return response();\n};`;\n\nconst schemaCode = `cube(\\`PageViews\\`, {\n  sql: \\`select * from aws_web_analytics.aws_web_analytics_event_collection\\`,\n\n  measures: {\n    count: {\n      type: \\`count\\`\n    },\n\n    userCount: {\n      sql: \\`anonymous_id\\`,\n      type: \\`countDistinct\\`,\n    }\n  },\n\n  dimensions: {\n    url: {\n      sql: \\`url\\`,\n      type: \\`string\\`\n    },\n\n    anonymousId: {\n      sql: \\`anonymous_id\\`,\n      type: \\`string\\`\n    },\n\n    eventType: {\n      sql: \\`event_type\\`,\n      type: \\`string\\`\n    },\n\n    referrer: {\n      sql: \\`referrer\\`,\n      type: \\`string\\`\n    },\n\n    timestamp: {\n      sql: \\`from_iso8601_timestamp(timestamp)\\`,\n      type: \\`time\\`\n    }\n  }\n});`;\n\nconst API_KEY = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpIjo0MDY3OH0.Vd-Qu4dZ95rVy9pKkyzy6Uxc5D-VOdTidCWYUVhKpYU';\n\nclass App extends Component {\n  componentDidMount() {\n    trackPageView();\n  }\n\n  render() {\n    return [\n      <Layout>\n          <Header>\n            <h2 style={{ color: '#fff' }}>AWS Web Analytics Dashboard</h2>\n          </Header>\n          <Content style={{ padding: '25px', margin: '25px' }}>\n            <Row type=\"flex\" justify=\"space-around\" align=\"top\" gutter={24}>\n              <Col span={24} lg={12}>\n                <Card title=\"Page Views\" style={{ marginBottom: '24px' }}>\n                  <QueryRenderer\n                    query={{\n                      \"measures\": [\n                        \"PageViews.count\"\n                      ],\n                      \"timeDimensions\": [\n                        {\n                          \"dimension\": \"PageViews.timestamp\",\n                          \"dateRange\": dateRange,\n                          \"granularity\": \"day\"\n                        }\n                      ]\n                    }}\n                    cubejsApi={cubejs(API_KEY)}\n                    render={({ resultSet }) => (\n                      resultSet && renderChart(resultSet) || (<Spin />)\n                    )}\n                  />\n                </Card>\n              </Col>\n              <Col span={24} lg={12}>\n                <Card title=\"Unique Visitors\" style={{ marginBottom: '24px' }}>\n                  <QueryRenderer\n                    query={{\n                      \"measures\": [\n                        \"PageViews.userCount\"\n                      ],\n                      \"timeDimensions\": [\n                        {\n                          \"dimension\": \"PageViews.timestamp\",\n                          \"dateRange\": dateRange,\n                          \"granularity\": \"day\"\n                        }\n                      ]\n                    }}\n                    cubejsApi={cubejs(API_KEY)}\n                    render={({ resultSet }) => (\n                      resultSet && renderChart(resultSet) || (<Spin />)\n                    )}\n                  />\n                </Card>\n              </Col>\n              <Col lg={12} span={24}>\n                <Card title=\"Visitor by Referrer\" style={{ marginBottom: '24px' }}>\n                  <QueryRenderer\n                    query={{\n                      \"measures\": [\n                        \"PageViews.userCount\"\n                      ],\n                      \"dimensions\": [\n                        \"PageViews.referrer\"\n                      ],\n                      \"timeDimensions\": [\n                        {\n                          \"dimension\": \"PageViews.timestamp\",\n                          \"dateRange\": dateRange,\n                          \"granularity\": \"day\"\n                        }\n                      ]\n                    }}\n                    cubejsApi={cubejs(API_KEY)}\n                    render={({ resultSet }) => (\n                      resultSet && renderStackedBarChart(resultSet, \"PageViews.userCount\") || (<Spin />)\n                    )}\n                  />\n                </Card>\n              </Col>\n              <Col lg={12} span={24}>\n                <Card title=\"Visitor by Referrer\" style={{ marginBottom: '24px' }}>\n                  <QueryRenderer\n                    query={{\n                      \"measures\": [\n                        \"PageViews.userCount\"\n                      ],\n                      \"dimensions\": [\n                        \"PageViews.referrer\"\n                      ],\n                      \"timeDimensions\": [\n                        {\n                          \"dimension\": \"PageViews.timestamp\",\n                          \"dateRange\": dateRange\n                        }\n                      ]\n                    }}\n                    cubejsApi={cubejs(API_KEY)}\n                    render={({ resultSet }) => (\n                      resultSet && renderPieChart(resultSet, \"PageViews.userCount\") || (<Spin />)\n                    )}\n                  />\n                </Card>\n              </Col>\n              <Col lg={12} span={24}>\n                <Card title=\"Architecture\" style={{ marginBottom: '24px', textAlign: 'center' }}>\n                  <img src=\"./architecture.png\" style={{ width: '100%', maxWidth: '500px' }}/>\n                </Card>\n              </Col>\n              <Col lg={12} span={24}>\n                <Card title=\"Page contains this tracking code\" style={{ marginBottom: '24px' }}>\n                  <PrismCode code={trackingCode}/>\n                </Card>\n              </Col>\n              <Col lg={12} span={24}>\n                <Card title=\"Events collected using this Lambda function\" style={{ marginBottom: '24px' }}>\n                  <PrismCode code={lambdaCode}/>\n                </Card>\n              </Col>\n              <Col lg={12} span={24}>\n                <Card title=\"Cube.js schema used for analytic querying\" style={{ marginBottom: '24px' }}>\n                  <PrismCode code={schemaCode}/>\n                </Card>\n              </Col>\n              <Col span={24} style={{ textAlign: 'center' }}>\n                <a href=\"https://statsbot.co/cubejs/\">\n                  <img src='./powered-by-cubejs-color.svg' style={{ width: 200 }}/>\n                </a>\n              </Col>\n            </Row>\n          </Content>\n        </Layout>,\n        <GithubCorner size={120} href=\"https://github.com/statsbotco/cubejs-client/tree/master/examples/aws-web-analytics\" />\n    ];\n  }\n}\n\nexport default App;\n","import { fetch } from 'whatwg-fetch';\nimport cookie from 'component-cookie';\nimport uuidv4 from 'uuid/v4';\n\nexport const trackPageView = () => {\n  if (!cookie('aws_web_uid')) {\n    cookie('aws_web_uid', uuidv4());\n  }\n  fetch(\n    'https://4bfydqnx8i.execute-api.us-east-1.amazonaws.com/dev/collect',\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        url: window.location.href,\n        referrer: document.referrer,\n        anonymousId: cookie('aws_web_uid'),\n        eventType: 'pageView'\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}